' USE DEGREES INSTEAD RADIANS
OPTION ANGLE DEGREES

' PLAYER POLYGON COORDINATES
DIM XP(2),YP(2)

' PLAYER'S FIRE
DIM FX(4),FY(4) 'COORDINATES
DIM FA(4)       'ACTIVITY FLAG
DIM FD(4)       'VERTICAL DIRECTION
DIM FS(4)       'SOUND

' PARTICLES
DIM PX(99),PY(99)   'COORDINATES
DIM PSX(99),PSY(99) 'H/V SPEED
DIM PA(99)          'ACTIVITY FLAG
DIM PM(99)          'MOVING TIME
DIM PCO(99)         'COLOUR
DIM PSZ(99)         'SIZE


' COLOUR SCHEMA
' CMM2 ON 8-BIT MODE APPROXIMATE THE COLOUR MAPPING, THEN I DO NOT
' RECOMMEND TO CHANGE THE COLOURS TO KEEP THE PIXEL COLOUR COLLISION WORKING
' (OR CREATE YOUR OWN COLOUR MAP)

CONST OBLV_CO=&HFF2800 ' OUTSIDE BLOOD VESSEL COLOUR
CONST VIR_CO=&HFF00BF  ' VIRUS COLOUR
CONST WALL_CO=7763456  ' WALL COLOUR
CONST WALR_CO=50^4     ' WALL REMAINS COLOUR
CONST FIRE_CO=10^8     ' PLAYER'S FIRE COLOUR
CONST HEMO_CO=7.8^8    ' HEMOGLOBIN COLOUR
CONST IBLV_CO=4^11     ' INSIDE BLOOD VESSEL COLOUR

'  THE LETTERS "T" AND "I" ALWAYS WILL BE USED AS TEMPORARY VARIABLES


'  ROUTINE: PRINT BOLD FONT WITH BORDER ----

'  F - FONT NUMBER
'  T - FONT TYPE
'X,Y - COORDINATES
'  I - INTERNAL COLOUR
'  M - MIDDLE BOLD COLOUR
'  B - BORDER COLOUR
'  S - BORDER SIZE
' A$ - TEXT
SUB BPRINT F,T,X,Y,I,M,A$,S,B
 PAGE WRITE 1
 FONT #F,T:COLOR B ' SET FONT AND BORDER COLOUR

 ' DRAW MANY TIMES THE SAME TEXT TO CREATE A BORDER (SLOW!)
 FOR ZA=-S TO S+1
  FOR ZB=-S TO S
   PRINT@(X+ZA,Y+ZB,1) A$;
 NEXT ZB,ZA

 ' SET MIDDLE BOLD FONT COLOUR AND SHOWS THE TEXT
 COLOR M
 PRINT@(X+1,Y,1) A$;
 
 ' SET INTERNAL FONT COLOUR AND SHOWS THE TEXT
 COLOR I
 PRINT@(X,Y,1) A$;
END SUB


' ROUTINE: HEARTBEAT SOUND -----------------
SUB HEARTBEAT
 IF HBEAT OR LIFE=0 THEN PLAY SOUND 4,B,Q,900,10 ELSE PLAY SOUND 4,B,O
END SUB


' ROUTINE: MUTE CHANNEL C ------------------
SUB MUTE C
 SN C,"O",1
END SUB


' ROUTINE: PLAY SOUND ----------------------
' C - CHANNEL
'T$ - TYPE
' F - FREQUENCY
' V - VOLUME
SUB SN C,T$,F,V
 EXECUTE "PLAY SOUND "+STR$(C)+",B,"+T$+","+STR$(F)+","+STR$(V)
END SUB


' SET GAME VIDEO MODE (2 - 640x480 8-BIT COLOUR)
MODE 2,8


' MAIN PROGRAM LOOP ------------------------
DO

 ' RESET VARIABLES ON START / RESTART
 INC V
 X=0: Y=200      ' PLAYER'S COORDINATES
 LIFE=200-HARD*2 ' LIFE
 DN=300          ' LOWER LIMIT OF THE BLOOD VESSEL
 GO=0            ' GAME RUNNING FLAG
 GAMEOVER=0      ' GAME OVER FLAG (IF YOU LOSE OR SAVE A PATIENT)

 SETTICK 0,HEARTBEAT ' DISABLE HEARTBEAT SOUND
 PLAY STOP

 ' IS THE GAME STARTING? (NO ONE IS SAVED YET)
 IF SAVED=0 THEN SCORE=0:HARD=2 ' RESET SCORE AND SET LEVEL


 ' TITLE SCREEN ----------------------------
 DO WHILE KEYDOWN(1)<>32 AND SAVED=0 ' RUNS UNTIL SPACE PRESSED AND NO ONE IS SAVED

  PAGE WRITE 1 ' SET VIDEO PAGE 1
  CLS 99       ' CLEAR SCREEN
  T=COS(I)*1+1 ' TEMP VARIABLE
  ANIMAT=T*99  ' SET ANIMATION
  INC I,30     ' INCREASE COS DEGREE

  ' SHOWS TITLE
  BPRINT 3,3,82,145,HEMO_CO,HEMO_CO,"HOPE ROBOT",T,HEMO_CO

  ' SHOWS HIGH SCORE
  BPRINT 7,2,4,4,RGB(WHITE),RGB(WHITE),"HIGH SCORE:"+FORMAT$(H_SCORE,"%06.0f"),2

  ' SHOWS FLASHING "PRESS SPACE" TEXT
  BPRINT 7,2,238,DN,ANIMAT,ANIMAT,"PRESS SPACE",2
  
  ' SHOWS CREDITS
  BPRINT 1,1,230,DN+85,RGB(WHITE),RGB(WHITE),"MAURO XAVIER - 2021",2

  PAGE COPY 1 TO 0   ' COPY PAGE 1 TO MAIN PAGE
  SN 1,"T",T*75+1,25 ' SOUND

 LOOP '-------------------------------------


 PAGE WRITE 2    ' SET FRAMEBUFFER PAGE

 SAVED=0         ' RESET PATIENT SAVED FLAG
 MS$="GAME OVER" ' RESET MAIN TEXT MESSAGE
 X_SPD=65        ' RESET PLAYER HORIZONTAL SPEED
 Y_SPD=0         ' RESET PLAYER VERTICAL SPEED
 SX=0            ' RESET HORIZONTAL ACCELERATION
 SY=0            ' RESET VERTICAL ACCELERATION
 ANIMAT=0        ' RESET ANIMATIONS
 UP=99           ' RESET UPPER LIMIT OF THE BLOOD VESSEL
 DG=0            ' RESET DEGREE
 BL_MOV=0        ' RESET BLOOD VESSEL MOVEMENT

 ' RESET FIRE AND PARTICLE ACTIVE FLAGS
 MATH SET 0,FA()
 MATH SET 0,PA()

 ' START HEARTBEAT SOUND
 SETTICK 25,HEARTBEAT

 ' RESET TIMER AND CLEAR SCREEN WITH OUTSIDE BLOOD VESSEL COLOUR
 TIMER=0
 CLS OBLV_CO

 ' FILL THE BEGINNING TUNNEL WITH THE INTERNAL BLOOD VESSEL COLOUR
 BOX 0,170,MM.HRES,60,0,,IBLV_CO

 ' GAME LOGIC LOOP (KEEP UNTIL ALIVE) ------
 DO WHILE LIFE>=0

  PAGE WRITE 2           ' SET THE MAIN FRAMEBUFFER PAGE
  SW=ROT MOD 2           ' KEEP THE SWITCH VARIABLE ACTIVE EACH LOOP (0 OR 1)
  RD_VUP=RND*10-5        ' RANDOM VARIABLE TO MOVE UPPER PART OF THE BLOOD VESSEL
  RD_VBT=RND*10-5        ' RANDOM VARIABLE TO MOVE BOTTOM PART OF THE BLOOD VESSEL
  R_LIM=MM.HRES-H_SCROLL ' DEFINE THE RIGHT SCREEN SIZE OF THE BOX TO SCROLL
  INC WALL,-1            ' DECREASE WALL FLAG

  ' IF WALL IS NOT ACTIVE THEN SET THE COLOUR TO THE BLOOD
  IF WALL<1 THEN BV_CO=IBLV_CO 

  ' SET UPPER LIMIT OF BLOOD VESSEL TO 20 AND SIZE MINIMUM OF 80 PIXELS
  UP=MAX(20,MIN(DN-80,UP))   

  ' SET BOTTOM LIMIT OF BLOOD VESSEL TO VERT. SCREEN SIZE -20 AND SIZE MIN. 80 PX
  DN=MAX(UP+80,MIN(MM.VRES-20,DN))  

  ' DRAW BODY FLESH
  BOX R_LIM,0,H_SCROLL,MM.VRES,0,,OBLV_CO

  ' DRAW BLOOD VESSEL OR WALL
  BOX R_LIM,UP,H_SCROLL,DN-UP,0,,BV_CO

  ' CREATE UPPER AND BOTTOM DETAILS OF THE BLOOD VESSEL  
  FOR T=0 TO 19 STEP 4
   C=RGB(255-T*9,40-T,0)
   BOX R_LIM,UP+T,H_SCROLL,2,0,,C
   BOX R_LIM,DN-T,H_SCROLL,2,0,,C
  NEXT T

  BV_CO=WALL_CO       ' SET BLOOD VESSEL CLOUR
  DG=ROT*BL_MOV       ' CALCULATE DEGREE BASED IN ROT VARIABLE (0 TO 360) * BLOOD VESSEL MOVEMENT
  SX=-6*(X>610)       ' SET PLAYER HORIZONTAL SPEED
  H_SCROLL=HARD+X\35  ' SET HORIZONTAL SCROLL SPEED

  ' DEFINE WHEN HEMOGLOBIN APPEARS
  IF RND>0.8 THEN

   I=0 ' RESET HEMOGLOBIN SEARCH INDEX

   ' ACTIVE ONE HEMOGLOBIN (0 TO 39)
   DO WHILE I<=39

    INC I
    ' IF NOT ACTIVE SET VARIABLES
    IF PA(I)=0 THEN 
     PA(I)=3                  ' ACTIVE FLAG
     PM(I)=0                  ' MOVING TIME
     PSX(I)=-RND*4-H_SCROLL   ' HORIZONTAL SPEED
     PSY(I)=RND*8-4           ' VERTICAL SPEED
     PCO(I)=HEMO_CO           ' COLOUR
     PSZ(I)=RND*3+2           ' SIZE
     PX(I)=MM.HRES            ' X AXYS
     PY(I)=UP+5+RND*(DN-UP-9) ' Y AXYS
     I=40
    ENDIF

   LOOP ' END OF ACTIVE HEMOGLOBIN LOOP

  ENDIF ' END OF HEMOGLOBIN APPEAR SEED


  ' SET BLOOD VESSEL PAGE
  PAGE WRITE 1

  ' CREATE A ANIMATION OF THE BLOOD VESSEL
  FOR T=0 TO MM.HRES STEP 30

   INC DG,12                         ' INC DEGREE
   BLIT T,0,T,COS(DG)*8,30,MM.VRES,2 ' BLIT A BLOCK OF IMAGE FROM MAIN FRAMEBUFFER 2 TO PAGE 1

  NEXT T
  
  ' VERIFY IF TIMER IS CONSIDERED ACTIVE AND PATIENT HAVE HEALTH
  ' THIS IS USED TO KEEP THE PLAYER FREEZED AT THE START OF THE STAGE
  IF TIMER>999 AND LIFE>0 THEN

   ' SCROLL PAGE 2 (MAIN FRAMEBUFFER)
   PAGE SCROLL 2,-H_SCROLL,0,0 

   EN_MAXH=MM.HRES+40 ' SET INITIAL HORIZONTAL POINT OF THE ENEMY
   SY=0               ' FREEZE HORIZONTAL SPEED
   INC UP,RD_VUP      ' MOVE UPPER PART OF THE BLOOD VESSEL
   INC DN,RD_VBT      ' MOVE BOTTOM PART OF THE BLOOD VESSEL 

   ' READ KEYBOARD
   FOR T=1 TO 4
    K=KEYDOWN(T)
    IF K=32*(F+1) THEN F=1     ' IS FIRING? SET TEMP SHOT FLAG
    INC SX,((K=131)-(K=130))*3 ' SET SPEED AS LEFT OR RIGHT IS PRESSED
    INC SY,((K=129)-(K=128))*3 ' SET SPEED AS UP OR DOWN IS PRESSED
   NEXT T
   GO=1 ' SET GAME START FLAG

  ELSE

   EN=0 ' DOES NOT ALLOW ENEMY ON THE SCREEN

  ENDIF

 
  INC X_SPD,-SGN(X_SPD)          ' DECREASE HORIZONTAL SPEED
  INC SCORE,INC_SC*(1-GAMEOVER)  ' INCREASE SCORE
  INC Y_SPD,SY                   ' INC/DEC VERTICAL DIRECTION
  INC X_SPD,SX                   ' INC/DEC HORIZONTAL SPEED
  INC X,X_SPD/10                 ' INC/DEC HORIZONTAL AXYS
  INC Y,Y_SPD/10                 ' INC/DEC VERTICAL AXYS
  SN 1,EG$,(9-X_SPD\13)\3+CANI,9 ' ROBOT SOUND
  EG$="N"                        ' SET ROBOT SOUND TO NOISE
  INC_SC=H_SCROLL/50+SAVED*50    ' SET VARIABLE TO INCREASE SCORE

  ' LIMIT PLAYER IN THE LEFT SCREEN
  IF X<0 THEN X=0: X_SPD=0

  BK_ANI=X_SPD                   ' SET VARIABLE OF ANIMATION FOR PLAYER TRAIL
  BK_ANI=MAX(-5,MIN(9,BK_ANI))   ' FORCE BETWEEN -5 TO 9
 
  ' INC/DEC VERTICAL ACELERATION
  INC Y_SPD,-SGN(Y_SPD)*(SY=0)

  ' LIMIT VERTICAL ACCELERATION TO KEEP BETWEEN -40 AND 40 (THANKS Vegepede!)
  Y_SPD=MAX(-40,MIN(40,Y_SPD))

  ' DRAW POLIGONAL "ROBOT PLAYER"
  XP(0)=X+COS(Y_SPD)*20
  YP(0)=Y+SIN(Y_SPD)*20
  XP(1)=X+COS(Y_SPD+120)*CANI
  YP(1)=Y+SIN(Y_SPD+120)*CANI
  XP(2)=X+COS(Y_SPD+240)*CANI
  YP(2)=Y+SIN(Y_SPD+240)*CANI
  PAGE WRITE 1
  POLYGON 3,XP(),YP(),0,&HBBBB
  XP(0)=X-COS(Y_SPD)*(BK_ANI+H_SCROLL*7) ' ANIMATED TRAIL
  YP(0)=Y-SIN(Y_SPD*2)*20


  INC BL_MOV,-0.1 ' DECREASE BLOOD VESSEL MOVEMENT
  MUTE 2
  HBEAT=TIMER MOD (((LIFE\50)+1)*250)<200 ' SET HEARTBEAT TIMING

  ' CHANGE COLOUR OF PLAYER TRAIL
  IF SW THEN POLYGON 3,XP(),YP(),IBLV_CO,RGB(127,0,0)

  ' THERE IS AN ACTIVE ENEMY?
  IF EN=0 THEN
 
   ' SET THE ENEMY
   IF RND<0.01 THEN
    XS=-RND*V               ' HORIZONTAL SPEED
    YS=RND*6-3              ' VERTICAL SPEED
    XE=EN_MAXH              ' X AXYS
    YE=UP+20+RND*(DN-UP-20) ' Y AXYS
    EN=GO                   ' ENEMY STATUS
    ER=0                    ' ENEMY ROTATION DEGREE
   ENDIF

  ELSE ' CONTROL THE ENEMY
  
   INC ER,15               ' INC DEGREE
   EA=COS(ER)*4+15         ' SET ANIMATION
   INC XS,0.1*(2*(XE<X)-1) ' SET HORIZONTAL SPEED
   INC YS,0.1*(2*(YE<Y)-1) ' SET VERTICAL SPEED
   INC XE,XS-H_SCROLL      ' SET X AXYS
   INC YE,YS               ' SET Y AXYS
   INC ROT_EN,YS           ' SET ENEMY ROTATION
   K=0

   ' ROTATE AROUND THE ENEMY
   FOR T=ROT_EN TO 360+ROT_EN STEP 20

    ' SET TEMP VARIABLES TO SPEED UP A LITTLE
    A=-COS(T)*EA
    C=-SIN(T)*EA

    ' DRAW SPIKES
    LINE XE,YE,XE-A*1.4,YE-C*1.4,1,RGB(WHITE)

    ' READ PIXEL
    O=PIXEL(XE-A,YE-C)

    ' VERIFY COLLISION
    IF O=OBLV_CO OR O=WALL_CO THEN
     MUTE 3      ' MUTE CHANNEL 3
     INC XS,A/5  ' SPEED DOWN THE HORIZONTAL ACCELERATION
     INC YS,C/5  ' SPEED DOWN THE VERTICAL ACCELERATION
     INC XE,A    ' APPLY INVERSE ACCELERATION TO X AXYS
     INC YE,C    ' APPLY INVERSE ACCELERATION TO Y AXYS
    ENDIF

   NEXT T

   ' DRAW VIRUS
   CIRCLE XE,YE,EA,,,0,VIR_CO
   SN 3,"T",EA*15,20 ' VIRUS SOUND

   ' REMOVE ENEMY IF OUT OF THE SCREEN
   IF XE<0 OR XE>EN_MAXH THEN
    EN=0
    MUTE 3
   ENDIF

  ENDIF


  ' PLAYER SHOT SCAN
  FOR T=1 TO 4

   PAGE WRITE 1 ' SET BLOOD VESSEL PAGE

   ' IS THE SHOOT ACTIVE?
   IF FA(T)=1 THEN

    INC FX(T),14-H_SCROLL-HARD ' SET X AXYS
    INC FY(T),FD(T)            ' SET Y AXYS
    INC FS(T),-1               ' DECREASE SOUND FREQUENCY

    ' REMOVE SHOT IF OUT OF THE SCREEN
    IF FX(T)>MM.HRES OR FY(T)<0 OR FY(T)>MM.VRES THEN
     FA(T)=0
    ELSEIF FS(T)>1 THEN 
     SN 2,"W",FS(T)*50,25 'PLAY SOUND
    ENDIF

    ' DRAW PLAYER SHOOT
    LINE FX(T)-30,FY(T)-FD(T)*2,FX(T),FY(T),1,FIRE_CO

    ' PARTICLES OF SHOT COLLISION
    FOR E=1 TO 9

     ' READ PIXEL COLOUR
     O=PIXEL(FX(T)+E,FY(T))

     ' ANY COLLISION?
     IF (O=OBLV_CO OR O=VIR_CO OR O=WALL_CO) THEN

      PC=WALR_CO ' SET DEFAULT PARTICLE TO WALL COLOUR
      A=3        ' TEMP VARIABLE TO SUM TO LIFE
      FA(T)=30   ' SET ACTIVITY FLAG

      IF O=OBLV_CO THEN    '-- IS COLLIDED WITH OUTSIDE BLOOD VESSEL? --
       PC=HEMO_CO  ' SET COLOUR AS REMAINS OF THE BLOOD VESSEL 
       BL_MOV=50   ' SET BLOOD VESSEL HURT ANIMATION
       A=-8        ' DECREASE -8 FROM LIFE
      ELSEIF O=VIR_CO THEN '-- IS COLLIDED WITH THE VIRUS? -------------
       PC=7.3^8    ' SET COLOUR AS REMAINS OF THE VIRUS
       INC_SC=150  ' INCREASE 150 IN SCORE
       A=25        ' INCREASE LIFE BY 25
       EN=0        ' REMOVE ENEMY
      ENDIF

      INC LIFE,A   ' INC/DEC LIFE
      MUTE 3
      EXIT FOR     ' EXIT FROM CURRENT SHOOT FOR/NEXT LOOP

     ENDIF ' END COLLISION VERIFICATION

    NEXT E ' END PARTICLES LOOP

   ENDIF ' END OF VERIFICATION OF THE SHOT ACTIVITY

   IF KEYDOWN(T)=32 THEN K=2

   ' IS A PLAYER SHOT ACTIVE?
   IF FA(T)>1 THEN

    PAGE WRITE 1 ' SET BLOOD VESSEL VIDEO PAGE
    C=FA(T)*8+9  ' TEMP VAR
    INC FX(T),-H_SCROLL ' SHOT AND EXPLOSION MUST KEEP SCROLLING
    SN 3,"N",61-FA(T)*2,25 ' SOUND
    INC FA(T),-3 ' DECREASE ACTIVITY
    CIRCLE FX(T),FY(T),35-FA(T),,,FIRE_CO,RGB(C,C,C) ' EXPLOSION

    ' IS THE EXPLOSION ENDING?
    IF FA(T)<3 THEN
     FA(T)=0      ' TURN OFF PLAYER SHOT
     PAGE WRITE 2 ' SET MAIN VIDEO PAGE
     MUTE 3
     CIRCLE FX(T),FY(T),33,1,1,IBLV_CO,IBLV_CO ' MAKE A HOLE IN THE BLOOD VESSEL
    ENDIF

    I=0       ' RESET PARTICLE SEARCH INDEX
    EN_MAXH=0 ' DOES NOT ALLOW A ENEMY TO RESPAWN

    ' SEARCH FOR A DISPONIBLE INDEX TEN TIMES OR UNTIL THE LIMIT
    DO WHILE I<=39 AND EN_MAXH<10

     ' IS THE PARTICLE FLAG DISPONIBLE?
     IF PA(I)=0 THEN
      PX(I)=FX(T)                    ' X AXYS
      PY(I)=FY(T)+(MM.VRES-FY(T))/99 ' Y AXYS
      PCO(I)=PC       ' COLOUR
      PA(I)=1         ' ACTIVE FLAG
      PSX(I)=RND*7-5  ' HORIZONTAL SPEED
      PSY(I)=RND*8-4  ' VERTICAL SPEED
      PSZ(I)=4        ' SIZE
      INC EN_MAXH     ' COUNT THIS PARTICLE
      PM(I)=0         ' MOVING TIME
     ENDIF

     INC I ' NEXT INDEX

    LOOP ' END PARTICLE INDEX SEARCH LOOP

   ENDIF ' END PLAYER SHOT ACTIVE

   PAGE WRITE 2   ' SET TO MAIN FRAMEBUFFER

   ' IS THE PLAYER STARTED TO SHOT? 
   IF FA(T)=0 AND F=1 THEN
    FX(T)=X+COS(Y_SPD)*35 ' X AXYS
    FY(T)=Y+SIN(Y_SPD)*50 ' Y AXYS
    FA(T)=1               ' ACTIVE FLAG
    F=2                   ' TEMP FLAG STATUS
    FD(T)=Y_SPD/2         ' VERTICAL DIRECTION
    FS(T)=10              ' SOUND
    EXIT FOR              ' JUMP SHOT SCAN LOOP
   ENDIF

  NEXT T ' END OF SHOT SCAN

  F=K ' SET TEMP SHOT SCAN

  ' LIFE TO MAXIMUM - PATIENT IS SAVED!
  IF LIFE>349 THEN
   LIFE=350
   MS$="SAVED!!"
   SAVED=1
  ENDIF

  ROT=1+ROT MOD 360    ' INCREASE ROTATION COUNTER 1 TO 360
  CANI=COS(ANIMAT)*4+9 ' CYCLE USED FOR ANIMATION

  ' INSERT WALL
  IF RND>0.99 AND GO THEN WALL=9


  ' PARTICLES SCAN
  FOR I=0 TO 39
  
   ' THE PARTICLE IS ACTIVE?
   IF PA(I)>0 THEN

    PAGE WRITE 1                    ' SET BLOOD VESSEL VIDEO PAGE
    INC PX(I),PSX(I)-H_SCROLL-PA(I) ' INCREASE X AXIS WITH THE HORIZONTAL ACC. - SCROLL - FLAG
    INC PY(I),PSY(I)                ' INCREASE Y AXIS WITH THE VERTICAL ACCELERATION

    O=PIXEL(PX(I),PY(I))            ' GET PIXEL COLOUR
    IF PX(I)<0 THEN PA(I)=0         ' REMOVE IF OUT OF THE SCREEN

    ' IS THE PARTICLES COLLIDED?
    IF O=OBLV_CO OR O=WALL_CO THEN
     INC PM(I)         ' INCREASE MOVING TIME LIMIT
     PSX(I)=-PSX(I)/4  ' INVERT X ACCELERATION
     PSY(I)=-PSY(I)/4  ' INVERT Y ACCELERATION
    ENDIF

    ' IF MOVING TIME GETS THE LIMIT, REMOVE PARTICLE AND SET TO MAIN FRAMEBUFFER PAGE
    IF PM(I)>6 THEN PA(I)=0:PAGE WRITE 2

    ' DRAW PARTICLE
    CIRCLE PX(I),PY(I),PSZ(I),,,PCO(I),PCO(I)

   ENDIF ' END OF THE PARTICLE ACTIVITY

  NEXT I ' END OF PARTICLE SCAN
 

  ' ROTATE SCAN AROUND PLAYER
  FOR T=0 TO 360 STEP 45

   ' TEMP VARIABLES
   A=COS(T)*15+5
   C=SIN(T)*CANI

   PAGE WRITE 1     ' SET BLOOD VESSEL VIDEO PAGE
   I=PIXEL(X+A,Y+C) ' GET PIXEL COLOUR
  
   ' IS THE PLAYER COLLIDED?
   IF I=OBLV_CO OR I=VIR_CO OR I=WALL_CO THEN
    INC X_SPD,-A    ' APPLY HORIZONTAL INVERSE ACCELERATION
    INC Y_SPD,-C*2  ' APPLY VERTICAL INVERSE ACCELERATION
    EG$="W"         ' SET PLAYER SOUND TO WAVE
    INC LIFE,-1     ' DECREASE PATIENT HEALTH
   ENDIF

  NEXT T ' END SCANNING PLAYER
 
  H_SCORE=MAX(H_SCORE,SCORE) ' SET HIGH SCORE

 
  ' DO IT IF PATIENT DIED OR SAVED
  IF LIFE<1 OR SAVED=1 THEN

   X_SPD=0        ' TURN OFF X SPEED
   Y_SPD=0        ' TURN OFF Y SPEED
   LIFE=SAVED*300 ' SET LIFE

   ' IF GAME OVER IS NOT SET, RESET TIMER AND SOUND
   IF GAMEOVER=0 THEN
    PLAY STOP
    TIMER=0
   ENDIF

   ' IF TIMER REACH A LIMIT, THEN PLAYER IS DEAD
   IF TIMER>4^6 THEN LIFE=-1

   GAMEOVER=1 ' THIS IS NOT A GAME OVER IF THE PATIENT WAS SAVED
   EN=0       ' RESET ENEMY

   ' SHOWS MESSAGE
   BPRINT 3,3+SAVED,95,145,FIRE_CO,RGB(BLUE),MS$,3,RGB(BLUE)*SW

  ELSE ' IF THE PATIENT IS ALIVE AND NOT SAVED YET

   INC LIFE,-0.1          ' DECREASE HEALTH
   INC ANIMAT,H_SCROLL*3  ' SET ANIMATION VARIABLE
   I=-1                   ' RESET PIXEL COLOUR SCAN

   ' SHOWS THE FLASHING  LIFE BAR
   BOX 50,18,LIFE,9,1,0,RGB(WHITE)*(HBEAT=1)+RGB(BLUE)*(HBEAT=0)
   ' LIFE BAR BORDER
   BOX 50,18,350,9,1,RGB(WHITE)
   ' SHOWS "LIFE" TEXT
   BPRINT 1,1,11,16,RGB(WHITE),RGB(BLUE),"LIFE",1

  ENDIF

  ' SHOWS SCORE AND SAVED PATIENTS NUMBER 
  TY$="SCORE:"+FORMAT$(SCORE,"%06.0f")+"  SAVED:"
  BPRINT 1,1+GAMEOVER*2,11-GAMEOVER*2,4,RGB(WHITE),RGB(BLUE),TY$+STR$(HARD-2),1+GAMEOVER

  ' CONTROL BLOOD VESSEL MOVEMENT
  BL_MOV=MAX(14-LIFE\10,MIN(99,BL_MOV)) 

  PAGE COPY 1 TO 0,I ' COPY THE BLOOD VESSEL VIDEO PAGE TO MAIN VIDEO PAGE

 LOOP ' END OF THE GAME LOGIC LOOP ---------

LOOP ' END OF THE MAIN GAME LOOP -----------
